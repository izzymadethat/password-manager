"""
Password Manager App: Version 2.0.0
New Clean, Simple and Better GUI
Securely store and retrieve passwords for user

Functions:
    Add user password entry: Website, Title, Username/Email, Password
    Encrypt password for database storage
    Decrypt password then retrieve information when user calls for it
    Generate a random password for user if needed
    Copy username or password for user to retrieve
    Edit password information stored in database then update database
    Go to site with login information entered
    Export saved passwords to CSV or JSON

Technical Requirements:
    Python: Main programming language
    Tkinter: GUI library
    cryptography.Fernet: Encryption and Decryption
    pymongo: Python library to handle MongoDb database functions
    datetime: Capture current date and time for database records and entries
    random: generate random password

Database Layout (for each password entry):
    {
        "id": (generated by mongoDb) # get id upon entering,
        "website": "http(s)://website.com",
        "title": User-entered title -or- name of website if blank,
        "username": "myusername" -or- "myemail@email.com" if blank,
        "email": "myemail@email.com",
        "password": "mypassword",
        "favorited": true/false,
        "entry_notes": "User's description of password, they can store up to 200 char about their entry"
        "last_modified": "01-01-2000" # date of entry or date updated
    }

    (for each user):
    {
        "id": (generated user id),
        "first_name": "John",
        "last_name": "Doe",
        "username": "myusername",
        "email": "myemail@email.com",
        "password": "mypassword",
        "login_entries": {document of all saved passwords},
        "last_login_session": "01-01-2000 12:00:00UTC"
    }

Version 2.0.0: Created: 11/4/2023 by Isaiah Vickers

"""

import tkinter as tk
from tkinter import IntVar
from tkinter import messagebox
from datetime import datetime
from cryptography.fernet import Fernet

SCREEN_SIZE = "700x550"
MAIN_COLOR = "#A45EE5"
SECOND_COLOR = "#090909"
TEXT_COLOR = "#FFF"
ENTRY_WIDTH = 50
VERSION = "2.0.0"

current_date = datetime.now()

window = tk.Tk()
window.title("NoMorePass | Password Manager")
window.configure(bg=MAIN_COLOR)

# title frame
title_frame = tk.Frame(window, bg=SECOND_COLOR)
title_frame.grid(row=0, column=0, padx=25, pady=10)

# main frame
frame = tk.Frame(window, bg=SECOND_COLOR)
frame.grid(row=1, column=0, padx=10, pady=10)

# menu frame
menu_frame = tk.Frame(window, background=MAIN_COLOR)
menu_frame.grid(row=2, column=0, padx=10, pady=10)

# ============= Title and Instructions ============
instructions = """Use the entry fields to add, search, update and delete login entries. 
                  The following fields are required to add a password: Website Url, Email, and Password.
                  Generate a password by choosing amount of characters then clicking 'Generate Password.'"""
copyright_statement = f"""NoMorePass Password Manager V{VERSION}. Created by Isaiah Vickers. Copyright Â© {current_date.strftime('%Y')} by 8iVisions. All Rights Reserved."""

title_label = tk.Label(
    title_frame,
    text="Password Manager",
    font=(None, 20),
    bg=SECOND_COLOR,
    fg=TEXT_COLOR,
)
instructions_label = tk.Label(
    title_frame, text=instructions, bg=SECOND_COLOR, fg=TEXT_COLOR
)
title_label.grid(row=0, column=0, padx=10, pady=5)
instructions_label.grid(row=1, column=0, padx=50, pady=5)

# ============= Entries ====================
website_label = tk.Label(frame, text="Website Url:", bg=SECOND_COLOR, fg=TEXT_COLOR)
website_entry = tk.Entry(frame, width=ENTRY_WIDTH)
website_label.grid(row=0, column=0, padx=10, pady=10)
website_entry.grid(row=0, column=1, padx=10, pady=5)

title_label = tk.Label(frame, text="Title:", bg=SECOND_COLOR, fg=TEXT_COLOR)
title_entry = tk.Entry(frame, width=ENTRY_WIDTH)
title_label.grid(row=1, column=0, padx=10, pady=10)
title_entry.grid(row=1, column=1, padx=10, pady=5)

username_label = tk.Label(frame, text="Username:", bg=SECOND_COLOR, fg=TEXT_COLOR)
username_entry = tk.Entry(frame, width=ENTRY_WIDTH)
username_label.grid(row=2, column=0, padx=10, pady=10)
username_entry.grid(row=2, column=1, padx=10, pady=5)

email_label = tk.Label(frame, text="Email Address:", bg=SECOND_COLOR, fg=TEXT_COLOR)
email_entry = tk.Entry(frame, width=ENTRY_WIDTH)
email_label.grid(row=3, column=0, padx=10, pady=10)
email_entry.grid(row=3, column=1, padx=10, pady=5)

password_label = tk.Label(frame, text="Password:", bg=SECOND_COLOR, fg=TEXT_COLOR)
password_entry = tk.Entry(frame, width=ENTRY_WIDTH)
password_label.grid(row=4, column=0, padx=10, pady=10)
password_entry.grid(row=4, column=1, padx=10, pady=5)


favorites_check = IntVar()
add_to_favorites_check = tk.Checkbutton(
    frame,
    text="Add to My Favorites",
    bg=SECOND_COLOR,
    fg=TEXT_COLOR,
    variable=favorites_check,
    onvalue=1,
    offvalue=0,
)
add_to_favorites_check.grid(row=5, column=1, padx=10, pady=5)

characters_box = tk.Spinbox(frame)
characters_box.grid(row=2, column=2, padx=10, pady=5)
password_generator_button = tk.Button(
    frame, text="Generate Password", bg=MAIN_COLOR, fg=SECOND_COLOR
)
password_generator_button.grid(row=3, column=2, padx=10, pady=5)

clear_all_button = tk.Button(frame, text="Clear All", bg=MAIN_COLOR, fg=SECOND_COLOR)
clear_all_button.grid(row=4, column=2, padx=10, pady=5)
# ================== Menu Section ========================
"""
                        All buttons and their functions.

Add: Encrpyt password then store new entry into database then msgbox password with id. 
     Required fields to check: Website, Email, Password, msgbox if no exist.

Find: Searches for entry once user enters data in fields. 
      If found, the fields are populated with the user's information

Update: Update user's information with whatever field has new information. 
        Check if entry exists otherwise msgbox entry not found.

Delete: Delete entry, user must use find to populate all boxes. 
        Msgbox yes/no. If yes, delete entire password information from database

Export: Msgbox yes/no. If yes, decrypt all passwords and export to csv

"""

add_button = tk.Button(menu_frame, text="ADD", bg=SECOND_COLOR, fg=TEXT_COLOR, width=15)
find_button = tk.Button(
    menu_frame, text="FIND", bg=SECOND_COLOR, fg=TEXT_COLOR, width=15
)
update_button = tk.Button(
    menu_frame, text="UPDATE", bg=SECOND_COLOR, fg=TEXT_COLOR, width=15
)
delete_button = tk.Button(
    menu_frame, text="DELETE", bg=SECOND_COLOR, fg=TEXT_COLOR, width=15
)
export_button = tk.Button(
    menu_frame, text="EXPORT", bg=SECOND_COLOR, fg=TEXT_COLOR, width=15
)

add_button.grid(row=0, column=0, padx=5, pady=5)
find_button.grid(row=0, column=1, padx=5, pady=5)
update_button.grid(row=0, column=2, padx=5, pady=5)
delete_button.grid(row=0, column=3, padx=5, pady=5)
export_button.grid(row=0, column=4, padx=5, pady=5)

copyright_label = tk.Label(
    window, text=copyright_statement, bg=MAIN_COLOR, font=(None, 7)
)
copyright_label.grid(row=3, column=0, padx=10, pady=10)

window.resizable(False, False)
window.mainloop()
